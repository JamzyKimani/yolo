apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo # Specifies the name of the statefulset
spec:
  serviceName: "mongo-service" # Specifies the service to use
  replicas: 1
  selector:
    matchLabels:
      app: yolo
  template:
    metadata:
      labels:
        app: yolo
    spec:
      containers:
      - name: mongodb
        image: mongo:4.4.3
        #image: mongo:8.0.1-noble
        #args: ["--dbpath", "/data/db"]
        env:
          - name: ME_CONFIG_MONGODB_ENABLE_ADMIN
            value: "true"
          - name: MONGO_INITDB_ROOT_USERNAME
            valueFrom:
              secretKeyRef:
                name: mongo-secret
                key: mongo-user
          - name: MONGO_INITDB_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mongo-secret
                key: mongo-password
          - name: MONGO_REPLICA_SET
            value: "rs0"
          - name: MONGO_PORT
            value: "27017"
        # Note, to disable non-auth in mongodb is kind of complicated[4]
        # Note, the `_getEnv` function is internal and undocumented[3].
        #
        # 1. https://gist.github.com/thilinapiy/0c5abc2c0c28efe1bbe2165b0d8dc115
        # 2. https://stackoverflow.com/a/54726708/2768067
        # 3. https://stackoverflow.com/a/67037065/2768067
        # 4. https://www.mongodb.com/features/mongodb-authentication
        command:
        - /bin/sh
        - -c
        - >
          set -x # print command been ran
          set -e # fail if any command fails

          env;
          ps auxwww;

          printf "\n\t mongod:: start in the background \n\n";
          mongod \
            --port="${MONGO_PORT}" \
            --bind_ip_all \
            --replSet="${MONGO_REPLICA_SET}" \
            --quiet > /tmp/mongo.log.json 2>&1 &

          sleep 9;
          ps auxwww;

          printf "\n\t mongod: set master \n\n";
          mongo --port "${MONGO_PORT}" --eval '
            rs.initiate({});
            sleep(3000);';

          printf "\n\t mongod: add user \n\n";
          mongo --port "${MONGO_PORT}" --eval '
            db.getSiblingDB("admin").createUser({
              user: _getEnv("MONGO_INITDB_ROOT_USERNAME"), 
              pwd: _getEnv("MONGO_INITDB_ROOT_PASSWORD"), 
              roles: [{ role: "userAdminAnyDatabase", db: "admin" }]
            });';

          printf "\n\t mongod: shutdown \n\n";
          mongod --shutdown;
          sleep 3;
          ps auxwww;
        
          printf "\n\t mongod: restart with authentication \n\n";
          mongod \
            --auth \
            --port="${MONGO_PORT}" \
            --bind_ip_all \
            --replSet="${MONGO_REPLICA_SET}" \
            --verbose=v
        ports:
        - containerPort: 27017
        volumeMounts:
        - name: mongodb-storage
          mountPath: /data/db
    
        resources:
          requests:
            cpu: "100m"
            memory: "256Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
      
  volumeClaimTemplates:
  - metadata:
      name: mongodb-storage
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 1Gi